<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.backend.dao.SysUserDao">
    <select id="queryObject" resultType="SysUserEntity">
        SELECT *
        FROM sys_user
        WHERE user_id = #{value}
    </select>

    <select id="queryList" resultType="SysUserEntity">
        SELECT *FROM sys_user
        <where>
            <if test="createUserId != null">
                and `create_user_id` = #{createUserId}
            </if>
            <if test="username != null and username.trim() != ''">
                and `username` like concat('%',#{username},'%')
            </if>
            <choose>
                <when test="sidx != null and sidx.trim() != ''">
                    order by ${sidx} ${order}
                </when>
                <otherwise>
                    order by user_id desc
                </otherwise>
            </choose>
            <if test="offset != null and limit != null">
                limit #{offset}, #{limit}
            </if>
        </where>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from sys_user
        <where>
            <if test="createUserId != null">
                and `create_user_id` = #{createUserId}
            </if>
            <if test="username != null and username.trim() != ''">
                and `username` like concat('%',#{username},'%')
            </if>
        </where>
    </select>

    <!-- 查询用户的所有权限 -->
    <select id="queryAllPerms" resultType="string">
        SELECT m.perms
        FROM sys_user_role ur
            LEFT JOIN sys_role_menu rm ON ur.role_id = rm.role_id
            LEFT JOIN sys_menu m ON rm.menu_id = m.menu_id
        WHERE ur.user_id = #{userId}
    </select>

    <!-- 查询用户的所有菜单ID -->
    <select id="queryAllMenuId" resultType="long">
        SELECT DISTINCT rm.menu_id
        FROM sys_user_role ur
            LEFT JOIN sys_role_menu rm ON ur.role_id = rm.role_id
        WHERE ur.user_id = #{userId}
    </select>

    <select id="queryByUserName" resultType="SysUserEntity">
        SELECT *
        FROM sys_user
        WHERE username = #{username}
    </select>

    <insert id="save" parameterType="SysUserEntity" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO sys_user
        (
            `username`,
            `password`,
            `email`,
            `mobile`,
            `status`,
            `create_user_id`
        )
        VALUES
            (
                #{username},
                #{password},
                #{email},
                #{mobile},
                #{status},
                #{createUserId}
            )
    </insert>

    <update id="update" parameterType="SysUserEntity">
        update sys_user
        <set>
            <if test="username != null">`username` = #{username},</if>
            <if test="password != null">`password` = #{password},</if>
            <if test="email != null">`email` = #{email},</if>
            <if test="mobile != null">`mobile` = #{mobile},</if>
            <if test="status != null">`status` = #{status},</if>
        </set>
        where user_id = #{userId}
        <if test="createUserId != null">
            and `create_user_id` = #{createUserId}
        </if>
    </update>

    <update id="updatePassword" parameterType="map">
        UPDATE sys_user
        SET `password` = #{newPassword}
        WHERE user_id = #{userId} AND password = #{password}
    </update>

    <delete id="deleteBatch">
        delete from sys_user where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
        ;
        delete from sys_user_role where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

</mapper>